rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is the owner of the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Helper function to check if user is Amleth
    function isAmleth() {
      return isAuthenticated() && request.auth.uid == 'amleth_user_id'; // Replace with actual Amleth's user ID
    }

    // Helper function to check if the update is a profile update
    function isProfileUpdate() {
      return request.resource.data.diff(resource.data).affectedKeys()
        .hasOnly(['username', 'email', 'displayName']);
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if isAuthenticated() && request.auth.uid == userId;
    }

    // Posts collection rules
    match /posts/{postId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        resource.data.authorId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.authorId == request.auth.uid;
    }

    // Comments subcollection rules
    match /posts/{postId}/comments/{commentId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        resource.data.authorId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.authorId == request.auth.uid;
    }

    // DMs collection rules
    match /dms/{dmId} {
      allow read: if isAuthenticated() && (
        request.auth.uid in resource.data.participants
      );
      allow create: if isAuthenticated() && (
        request.auth.uid in request.resource.data.participants
      );
      allow update: if isAuthenticated() && (
        request.auth.uid in resource.data.participants
      );
      allow delete: if isAuthenticated() && (
        request.auth.uid in resource.data.participants
      );
    }

    // DM messages subcollection rules
    match /dms/{dmId}/messages/{messageId} {
      allow read: if isAuthenticated() && (
        request.auth.uid in get(/databases/$(database)/documents/dms/$(dmId)).data.participants
      );
      allow create: if isAuthenticated() && (
        request.auth.uid in get(/databases/$(database)/documents/dms/$(dmId)).data.participants
      );
      allow update, delete: if false; // Messages cannot be modified or deleted
    }
  }
} 